apiVersion: v1
kind: Namespace
metadata:
  name: project3
--- 
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: frontend
  namespace: project3
spec:
  selector:
    matchLabels:
      app: frontend # has to match .spec.template.metadata.labels
  serviceName: "frontend"
  replicas: 1
  template:
    metadata:
      labels:
        app: frontend # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      setHostnameAsFQDN: true
      containers:
      - name: frontend
        image: bjgomes/frontend
        ports:
        - containerPort: 3000
          name: frontend
--- 
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: project3
spec:
  selector:
    app: frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: LoadBalancer

--- 
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: backend
  namespace: project3
spec:
  selector:
    matchLabels:
      app: backend # has to match .spec.template.metadata.labels
  serviceName: "backend"
  replicas: 1
  template:
    metadata:
      labels:
        app: backend # has to match .spec.selector.matchLabels
    spec:
      setHostnameAsFQDN: true
      terminationGracePeriodSeconds: 10
      containers:
      - name: backend
        image: bjgomes/backend
        ports:
        - containerPort: 8085
          name: backend
--- 
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: project3
spec:
  selector:
    app: backend
  ports:
  - protocol: TCP
    port: 8085
    targetPort: 8085
  type: ClusterIP

--- 
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend
  namespace: project3
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80
      - path: /flights
        pathType: Prefix
        backend:
          service:
            name: backend
            port:
              number: 8085

--- 
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-admin-binding
  namespace: project3
subjects: 
- kind: ServiceAccount
  name: ingress-azure
  namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
